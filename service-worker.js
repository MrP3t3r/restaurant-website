"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/restaurant-website/index.html","84f36fe47cac97650a4273abed5cb92e"],["/restaurant-website/static/css/main.debd224e.css","25a966981c4ff88f76388bd07e461c11"],["/restaurant-website/static/js/main.ad1687bd.js","d11a9bd67f05d63ee6960b07a3c97a1e"],["/restaurant-website/static/media/bg-contact.7ae11942.png","7ae1194210871ea334319857941e6b97"],["/restaurant-website/static/media/desszertek.3850bf4d.png","3850bf4d597cb67fcf7c37618fedff74"],["/restaurant-website/static/media/galeria.b8d5be41.png","b8d5be41fb07c27db9617b1fe447113d"],["/restaurant-website/static/media/italok.c0853e9f.png","c0853e9f6ae42fa0496b85d480660468"],["/restaurant-website/static/media/keress_bg.308578b0.png","308578b03d76df77eb603ac5bf57bac2"],["/restaurant-website/static/media/pattern.3172f2aa.png","3172f2aac7448b278cd74983ccbf7b71"],["/restaurant-website/static/media/pattern2.32dec3c0.png","32dec3c034e21caf9df2e0aa779f7fb2"],["/restaurant-website/static/media/pattern3.1f415d64.png","1f415d64470c66651179c6d66af00c89"],["/restaurant-website/static/media/pattern4.e37def67.png","e37def67b4e1baeac78c77c143a91f89"],["/restaurant-website/static/media/pékség.59ab1279.png","59ab1279b1cbf01a2035fe22c0468dd7"],["/restaurant-website/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/restaurant-website/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/restaurant-website/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/restaurant-website/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"],["/restaurant-website/static/media/zoltan_pic3.6dd8f106.png","6dd8f1062c47d3a31f55100a05c24e5f"],["/restaurant-website/static/media/ételek.6dfb206a.png","6dfb206aec117dd78dc533c5a2b450f7"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/restaurant-website/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});